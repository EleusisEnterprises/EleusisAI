//@version=5
strategy("EMA Crossover with SBBWP Confirmation", overlay=true)

// Input Parameters
leverage = input.float(title="Leverage", defval=5.0, step=0.1) // Leverage property for futures trading
htf = input.timeframe("D", title="Higher Timeframe") // Higher timeframe for trend filter

// SBBWP Parameters
i_priceSrc = input.source(close, 'Price Source', inline='1', group='BBWP Properties')
i_bbwpLen  = input.int(13, 'Length', minval=1, inline='2', group='BBWP Properties')
i_bbwpLkbk = input.int(252, 'Lookback', minval=1, inline='2', group='BBWP Properties')
i_ma1On    = input.bool(true, '', inline='3', group='BBWP Properties')
i_ma1Type  = input.string('SMA', 'BBWP MA Type', options=['SMA', 'EMA', 'VWMA'], inline='3', group='BBWP Properties')
i_ma1Len   = input.int(5, 'Length', minval=1, inline='3', group='BBWP Properties')
bbwpOverboughtLevel = input.int(80, 'BBWP Overbought Level', minval=1, maxval=100)
bbwpOversoldLevel = input.int(20, 'BBWP Oversold Level', minval=1, maxval=100)

// EMA Length Inputs
ema9Length = input.int(9, title="9 EMA Length")
ema21Length = input.int(21, title="21 EMA Length")
ema55Length = input.int(55, title="55 EMA Length (Higher Timeframe)")
htf_ema21Length = input.int(21, title="HTF 21 EMA Length")
htf_ema55Length = input.int(55, title="HTF 55 EMA Length")

// Higher Timeframe EMAs
htf_ema21 = request.security(syminfo.tickerid, htf, ta.ema(close, htf_ema21Length))
htf_ema55 = request.security(syminfo.tickerid, htf, ta.ema(close, htf_ema55Length))
uptrend = htf_ema21 > htf_ema55
downtrend = htf_ema21 < htf_ema55

// Lower Timeframe EMAs
ema9 = ta.ema(close, ema9Length)
ema21 = ta.ema(close, ema21Length)

// SBBWP Calculation
bbwp = ta.percentrank(ta.bbw(i_priceSrc, i_bbwpLen, 1), i_bbwpLkbk)
bbwpMA1 = i_ma1On ? i_ma1Type == 'VWMA' ? ta.vwma(bbwp, i_ma1Len) : i_ma1Type == 'EMA' ? ta.ema(bbwp, i_ma1Len) : ta.sma(bbwp, i_ma1Len) : na

// SBBWP Volatility Confirmation
volatilityBuyConfirm = ta.crossover(bbwp, bbwpMA1) and bbwp < bbwpOversoldLevel
volatilitySellConfirm = ta.crossunder(bbwp, bbwpMA1) and bbwp > bbwpOverboughtLevel

// Entry Conditions
longEntry = (uptrend and ema9 > ema21) or (uptrend and ta.crossover(ema9, ema21) and volatilityBuyConfirm)
shortEntry = (downtrend and ema9 < ema21) or (downtrend and ta.crossunder(ema9, ema21) and volatilitySellConfirm)

// Exit Conditions based only on EMA Crossovers
closeLong = ta.crossunder(ema9, ema21)
closeShort = ta.crossover(ema9, ema21)

// Position Sizing based on Leverage
positionSize = strategy.equity * leverage / close

// Execute Trades using strategy.entry and strategy.exit with EMA-Only Exit Logic
if (longEntry)
    strategy.entry("Long", strategy.long, qty=positionSize)

if (shortEntry)
    strategy.entry("Short", strategy.short, qty=positionSize)

if (strategy.position_size > 0 and closeLong)  // For long positions
    strategy.close("Long")

if (strategy.position_size < 0 and closeShort)  // For short positions
    strategy.close("Short")

// Plot EMAs
plot(ema9, color=color.blue, title="EMA 9")
plot(ema21, color=color.orange, title="EMA 21")

// Plot Higher Timeframe EMAs
plot(htf_ema21, color=color.green, title="HTF EMA 21", linewidth=2, offset=-1)
plot(htf_ema55, color=color.red, title="HTF EMA 55", linewidth=2, offset=-1)

// Plot SBBWP in a separate window below the main chart
plot(bbwp, title="BBWP", color=color.blue, linewidth=2)
plot(bbwpMA1, title="BBWP MA", color=color.white, linewidth=1)

// Plot Overbought and Oversold Levels for SBBWP in the separate window
hline(bbwpOverboughtLevel, "BBWP Overbought Level", color=color.red, linestyle=hline.style_dashed)
hline(bbwpOversoldLevel, "BBWP Oversold Level", color=color.green, linestyle=hline.style_dashed)
