//@version=5
indicator("CMY EMA Cross Strategy with Enhanced Support/Resistance Visualization", overlay=true)

// === Constants and Inputs ===
EMA_PERIOD_9 = 9
EMA_PERIOD_21 = 21
EMA_PERIOD_55 = 55

// Define EMA colors and widths
EMA_COLOR_9 = color.new(color.rgb(0, 255, 255), 0)  // Cyan
EMA_COLOR_21 = color.new(color.rgb(255, 255, 0), 0) // Yellow
EMA_COLOR_55 = color.new(color.rgb(255, 0, 255), 0) // Magenta
EMA_WIDTH_9 = 3
EMA_WIDTH_21 = 2
EMA_WIDTH_55 = 2

MAX_OPACITY = 0
MIN_OPACITY = 20
REVERSAL_OPACITY = 40

// Support and Resistance Input Parameters
supportLength = input.int(20, title="Support Length (Swing Low)")
resistanceLength = input.int(20, title="Resistance Length (Swing High)")
maPeriod = input.int(50, title="Moving Average Period")

// === Utility Functions ===
getProximity(ema1, ema2) =>
    proximity = 1 - (math.abs(ema1 - ema2) / ((ema1 + ema2) / 2))
    math.max(0, math.min(1, proximity))

// === Main Logic ===
ema9 = ta.ema(close, EMA_PERIOD_9)
ema21 = ta.ema(close, EMA_PERIOD_21)
ema55 = ta.ema(close, EMA_PERIOD_55)

plot(ema9, color=EMA_COLOR_9, linewidth=EMA_WIDTH_9, title="9 EMA")
plot(ema21, color=EMA_COLOR_21, linewidth=EMA_WIDTH_21, title="21 EMA")
plot(ema55, color=EMA_COLOR_55, linewidth=EMA_WIDTH_55, title="55 EMA")

proximity9_21 = getProximity(ema9, ema21)
proximity21_55 = getProximity(ema21, ema55)
proximity9_55 = getProximity(ema9, ema55)

averageProximity = (proximity9_21 + proximity21_55 + proximity9_55) / 3
opacity = math.round(MIN_OPACITY * averageProximity + MAX_OPACITY * (1 - averageProximity))
gradientBgColor = color.new(color.white, 100 - opacity)

[weekly_ema21, weekly_ema55] = request.security(syminfo.tickerid, "W", [ta.ema(close, EMA_PERIOD_21), ta.ema(close, EMA_PERIOD_55)])
bullishReversalConfirmed = ta.crossover(weekly_ema21, weekly_ema55)
bearishReversalConfirmed = ta.crossunder(weekly_ema21, weekly_ema55)

// Declare reversalBgColor as a color type variable
var color reversalBgColor = na

// Update the reversalBgColor based on the conditions
reversalBgColor := bullishReversalConfirmed ? color.new(color.green, 100 - REVERSAL_OPACITY) : reversalBgColor
reversalBgColor := bearishReversalConfirmed ? color.new(color.red, 100 - REVERSAL_OPACITY) : reversalBgColor

// Apply the reversal background and gradient background colors to all loaded candles
bgcolor(request.security(syminfo.tickerid, "W", reversalBgColor), title="Weekly Reversal Background", offset=0)
bgcolor(gradientBgColor, title="Gradient Background", offset=0)

// === Support and Resistance Visualization ===
// Support using recent swing lows
supportLevel = ta.lowest(low, supportLength)

// Resistance using recent swing highs
resistanceLevel = ta.highest(high, resistanceLength)

// Pivot Points Calculation (Classic)
pivotPoint = (ta.highest(high, 1) + ta.lowest(low, 1) + close) / 3
pivotSupport1 = pivotPoint * 2 - ta.highest(high, 1)
pivotResistance1 = pivotPoint * 2 - ta.lowest(low, 1)

// === Support and Resistance Zones for Lower Time Frames ===
tf_in_minutes = timeframe.multiplier * (timeframe.isintraday ? 1 : (timeframe.isdaily ? 60 * 24 : 60 * 24 * 7))

plot(tf_in_minutes <= 60 ? resistanceLevel : na, color=color.red, linewidth=2, title="Resistance (Lower TF)")
plot(tf_in_minutes <= 60 ? supportLevel : na, color=color.green, linewidth=2, title="Support (Lower TF)")

fill(plot1=plot(tf_in_minutes <= 60 ? resistanceLevel : na, color=color.red, linewidth=1), 
     plot2=plot(tf_in_minutes <= 60 ? supportLevel : na, color=color.green, linewidth=1), 
     color=color.new(color.blue, 80), title="Support/Resistance Zone (Lower TF)")
